{"pageProps":{"member":{"id":"yuku","nickname":"ゆうく","realName":"Yuku Kotani","bio":"Webと長濱ねるさんが好きです","avatarSrc":"/avatars/yuku.png","sources":["https://yuku.dev/feed.xml","https://zenn.dev/yuku/feed"],"githubUsername":"yukukotani","twitterUsername":"yukukotani","websiteUrl":"https://yuku.dev"},"postItems":[{"title":"JavaScriptを大きく変えうる Dataflow Proposals の概要と論点(Call-this, Pipe Operator)","contentSnippet":"最近、TC39 で Dataflow Proposals と呼ばれる5つのプロポーザルが議論されている。これらはパラダイムをも変えうる大きな提案で、議論も結構おもしろいので紹介する。この記事では2022/05時点での以下の内容を紹介する。各プロポーザルの概要・モチベーション・論点全体的な論点以下のことは詳しく書かないので、ぜひ各自でディグってほしい。各プロポーザルの詳細な仕様過去の経緯!この記事で紹介する構文等は全て議論中であり、変わる可能性が大いにある。 Dataflow Proposals とは以下の5つのプロポーザルをまとめて Dataflow Pr...","link":"https://zenn.dev/yuku/articles/b169ac62ac3271","isoDate":"2022-05-03T02:07:17.000Z","dateMiliSeconds":1651543637000,"authorName":"ゆうく","authorId":"yuku"},{"title":"2021 年の振り返りと 2022 年やりたいこと","link":"https://yuku.dev/articles/2021-12-29/2021-to-2022/","isoDate":"2021-12-29T00:00:00.000Z","dateMiliSeconds":1640736000000,"authorName":"ゆうく","authorId":"yuku"},{"title":"JavaScript の Bind Operator プロポーザルが復活した","link":"https://yuku.dev/articles/2021-11-11/javascript-bind-this-op/","isoDate":"2021-11-11T00:00:00.000Z","dateMiliSeconds":1636588800000,"authorName":"ゆうく","authorId":"yuku"},{"title":"クロスオリジンでLocalStorage等のデータをセキュアにやりとりする","contentSnippet":"Webサービスのドメインを変更したい機会があり、Local Storage や IndexedDB に保存した情報(認証情報等を含む)をクロスオリジンでセキュアに移行する必要がありました。小さな実装ですが気をつけることがちらほらあるので、具体的なシナリオを元に実装を紹介します。 シナリオLocalStorage の some-data というキーに格納されたデータを https://src.example.com から https://dest.example.com に移行するシナリオを考えます。以下の図のような処理を実装します。 移行元の実装 (src)まず、移行元...","link":"https://zenn.dev/yuku/articles/40d9973f6d30ec","isoDate":"2021-10-20T03:22:34.000Z","dateMiliSeconds":1634700154000,"authorName":"ゆうく","authorId":"yuku"},{"title":"Namespace Import に補完を効かせる TypeScript プラグインを作った","contentSnippet":"Namespace Import に補完を効かせる TypeScript Language Service Plugin[1]、typescript-plugin-namespace-import を作りました。そのモチベーションと使い方を紹介します。!この記事・製作物は Named Export と Default Export の是非について主張をするものではなく、それらの話題に関連して作ったものでもありません TL;DR普通のオブジェクトを名前空間として用いると Tree Shaking が効かずバンドルサイズが膨らむNamespace Import を用いれば...","link":"https://zenn.dev/yuku/articles/4d2f665cf42385","isoDate":"2021-09-10T02:27:35.000Z","dateMiliSeconds":1631240855000,"authorName":"ゆうく","authorId":"yuku"},{"title":"150万MAUのNuxt.js製サービスを機能開発を止めずに1ヶ月&1人でNext.jsに置き換えた話","contentSnippet":"Nuxt.js で開発されていたAI受診相談ユビーのフロントエンドを Next.js で作り直しました。まだまだ仮説検証を繰り返すフェーズのスタートアップのため、機能開発を止めて一気に置き換えることはできず、機能ごとに少しずつ置き換えてリリースをしました。結果、5人のプロダクト開発チームによる機能開発と並走して、全体の移行を1人で1ヶ月の短期間で終わらせることができたので、その意思決定や過程、工夫を紹介します。詳細な設計を話すと長くなるため別の機会として、この記事では移行についてのみ書きます。Next.js と Nuxt.js が似ていて読みにくいので、区別のために Nuxt...","link":"https://zenn.dev/yuku/articles/a9edd53e13bb26","isoDate":"2021-07-26T10:08:53.000Z","dateMiliSeconds":1627294133000,"authorName":"ゆうく","authorId":"yuku"},{"title":"Ubie として Twitter 投票をして webpack に $1000 寄付した","link":"https://yuku.dev/articles/2021-07-19/donate-to-webpack/","isoDate":"2021-07-19T00:00:00.000Z","dateMiliSeconds":1626652800000,"authorName":"ゆうく","authorId":"yuku"},{"title":"JavaScript に拡張メソッドを導入するプロポーザル","link":"https://yuku.dev/articles/2021-07-18/javascript-extensions/","isoDate":"2021-07-18T00:00:00.000Z","dateMiliSeconds":1626566400000,"authorName":"ゆうく","authorId":"yuku"},{"title":"Next.js で SSR/SSG したページに Cache-Control などのヘッダを設定する","contentSnippet":"Next.js には強力な Incremental Static Regeneration がありますが、Vercel 以外にホストしている場合は使うことができません。そのとき、Cache-Control や Surrogate-Control ヘッダを用いて Fastly のような CDN にキャッシュを持たせたくなります。このヘッダの持たせ方に少しクセがあったので備忘録的に書きます。例えば、/articles/[id] にヘッダを持たせたいとします。 方法1. next.config.js で設定next.config.js の headers で設定する方法です。ne...","link":"https://zenn.dev/yuku/articles/f5a728808c4efa","isoDate":"2021-07-07T12:35:13.000Z","dateMiliSeconds":1625661313000,"authorName":"ゆうく","authorId":"yuku"},{"title":"GraphQL でフェッチした部分的なモデルのドメインロジックを TypeScript と Proxy で表現する試み","contentSnippet":"仕事で GraphQL を使ったプロダクトに DDD のエッセンスを取り入れたく、GraphQL で部分的にフェッチしたドメインモデルに堅牢な型付けを試みたので、まだまだ荒削りですが紹介します。 やりたいことこのような GraphQL スキーマがあったとします。type Person {  firstName: String!  lastName: String!  age: Int!}type Query {  person: Person!}この Person に対して、以下ような 2 つのロジックを持たせたドメインモデルを定義したいです。function...","link":"https://zenn.dev/yuku/articles/45bb0d6cf3da85","isoDate":"2021-07-07T08:53:13.000Z","dateMiliSeconds":1625647993000,"authorName":"ゆうく","authorId":"yuku"},{"title":"Ubie がスタートアップだからこそ OSS に寄付をする理由","link":"https://yuku.dev/articles/2021-05-26/donate-to-oss/","isoDate":"2021-05-26T00:00:00.000Z","dateMiliSeconds":1621987200000,"authorName":"ゆうく","authorId":"yuku"},{"title":"20歳になっちゃった","link":"https://yuku.dev/articles/2021-03-23/age-20/","isoDate":"2021-03-23T00:00:00.000Z","dateMiliSeconds":1616457600000,"authorName":"ゆうく","authorId":"yuku"},{"title":"2020 年の振り返りと 2021 年やりたいこと","link":"https://yuku.dev/articles/2020-12-31/2020-to-2021/","isoDate":"2020-12-31T00:00:00.000Z","dateMiliSeconds":1609372800000,"authorName":"ゆうく","authorId":"yuku"},{"title":"Shadow DOM で複雑なバナー広告を実装する","contentSnippet":"この記事は Ubie Advent Calendar 2020 の 18 日目の記事です。外部ウェブサイトに掲載するバナー広告を実装するにあたって、一般的なバナー画像だけでは表現力が足りず要件を満たせなかったため、Shadow DOM を採用しました。その実装過程を紹介します。 Shadow DOM とはShadow DOM は Web Components を構成する仕組みの一部で、超ざっくり言うと DOM ツリーをカプセル化することができます。caniuse によるとモダンブラウザではすでに使えます (iOS Safari は一部バグあり)。詳しくは Google の記事...","link":"https://zenn.dev/yuku/articles/3c36d6710977e9","isoDate":"2020-12-18T03:21:45.000Z","dateMiliSeconds":1608261705000,"authorName":"ゆうく","authorId":"yuku"},{"title":"GitHub Flavored Markdown のテーブルの仕様","link":"https://yuku.dev/articles/2020-11-11/gfm-spec-table/","isoDate":"2020-11-11T00:00:00.000Z","dateMiliSeconds":1605052800000,"authorName":"ゆうく","authorId":"yuku"},{"title":"ISUCON10 予選負けた 悔しい","link":"https://yuku.dev/articles/2020-09-14/isucon10-loser/","isoDate":"2020-09-14T00:00:00.000Z","dateMiliSeconds":1600041600000,"authorName":"ゆうく","authorId":"yuku"},{"title":"ブログを作ったテスト記事","link":"https://yuku.dev/articles/2020-09-13/just-for-test/","isoDate":"2020-09-13T00:00:00.000Z","dateMiliSeconds":1599955200000,"authorName":"ゆうく","authorId":"yuku"}]},"__N_SSG":true}